generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Brand {
  id   String @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name String @unique
}

model Powder {
  id           String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name         String   @unique
  brandId      String   @db.Uuid
  strength     String
  pricePerGram Float
  usage        String[]
}

model Playlist {
  id        String           @id @default(uuid())
  name      String
  userId    String
  createdAt DateTime         @default(now())
  updatedAt DateTime         @updatedAt
  user      User             @relation(fields: [userId], references: [id], onDelete: Cascade)
  songs     PlaylistToSong[]
}

model PlaylistToSong {
  playlistId String
  songId     String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  playlist   Playlist @relation(fields: [playlistId], references: [id], onDelete: Cascade)
  song       Song     @relation(fields: [songId], references: [id], onDelete: Cascade)

  @@id([playlistId, songId], name: "id")
}

model Song {
  id        String           @id @default(uuid())
  name      String
  createdAt DateTime         @default(now())
  updatedAt DateTime         @updatedAt
  playlists PlaylistToSong[]
}

model User {
  id        String     @id @default(uuid())
  name      String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  playlists Playlist[]
}
